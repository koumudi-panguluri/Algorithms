/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    ListNode res=null, prev=null, temp=null;
    
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
         int sum = 0;
         int carry = 0;
      while(l1!=null || l2!=null){
          
              sum = (l1!=null ? l1.val : 0) + (l2!= null ? l2.val : 0);
              sum+=carry;
              carry = sum >= 10 ? 1 : 0;
              sum = sum%10;
              temp = new ListNode(sum);
              if(res==null){
                  res = temp;
              }
              else{
                  prev.next = temp;
              }
              prev = temp;
              l1 = l1!=null ? l1.next : null;
              l2 = l2!=null ? l2.next : null;
          
      }
        if(carry > 0){
            temp.next = new ListNode(carry);
        }
        
        return res;
    }
}
