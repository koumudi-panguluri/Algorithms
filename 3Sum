class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> arr = new ArrayList<>();
        
        int target = 0;
        Arrays.sort(nums);
        
        for(int i=0; i<(nums.length - 2); i++){
            
            if(i!=0 && nums[i]==nums[i-1]){
                continue;
            }
            
            int left = i+1, right = (nums.length) - 1;
            
            while(left < right){
                int sum = nums[i]+nums[left]+nums[right];
                
                if(sum < target){
                    left++;
                }
                else if(sum > target){
                    right--;
                }
                else{
                    List<Integer> arr1 = new ArrayList<>();
                    arr1.add(nums[i]);
                    arr1.add(nums[left]);
                    arr1.add(nums[right]);
                    arr.add(arr1);
                    left++; right--;
                    
                    while(left<right && nums[left] == nums[left-1]){
                        left++;
                    }
                    while(left<right && nums[right] == nums[right+1]){
                        right--;
                    }
                }
            }
            
        }
        return arr;
    }
}

// LC15
// TC O(N^2)
